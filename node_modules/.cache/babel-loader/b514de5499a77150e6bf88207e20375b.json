{"ast":null,"code":"var _jsxFileName = \"D:\\\\MernStactEcommerce\\\\ecommerce\\\\src\\\\screens\\\\ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartAction\";\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShippingScreen = props => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const [state, setStates] = useState(shippingAddress.state);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      state,\n      country\n    }));\n    console.log(\"submitted\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter address\",\n          required: true,\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter city\",\n          required: true,\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"PostalCode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter postalCode\",\n          required: true,\n          value: postalCode,\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter state\",\n          required: true,\n          value: state,\n          onChange: e => setStates(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter country\",\n          required: true,\n          value: country,\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        varient: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShippingScreen, \"0lxkkCjqPUQ9WUiLNmrqRb2q0kM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/screens/ShippingScreen.js"],"names":["React","useState","Link","Form","Button","Col","Row","useDispatch","useSelector","saveShippingAddress","FormContainer","ShippingScreen","props","cart","state","shippingAddress","dispatch","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","setStates","submitHandler","e","preventDefault","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAcC,MAAd,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,iBAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAACc,eAAe,CAACE,OAAjB,CAAtC;AACA,QAAK,CAACE,IAAD,EAAMC,OAAN,IAAenB,QAAQ,CAACc,eAAe,CAACI,IAAjB,CAA5B;AACA,QAAK,CAACE,UAAD,EAAYC,aAAZ,IAA2BrB,QAAQ,CAACc,eAAe,CAACM,UAAjB,CAAxC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAACc,eAAe,CAACQ,OAAjB,CAAtC;AACA,QAAM,CAACT,KAAD,EAAQW,SAAR,IAAqBxB,QAAQ,CAACc,eAAe,CAACD,KAAjB,CAAnC;;AAEA,QAAMY,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,QAAQ,CAACP,mBAAmB,CAAC;AAACQ,MAAAA,OAAD;AAASE,MAAAA,IAAT;AAAcE,MAAAA,UAAd;AAAyBP,MAAAA,KAAzB;AAA+BS,MAAAA;AAA/B,KAAD,CAApB,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAJD;;AAKA,sBACI,QAAC,aAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEJ,aAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,eAFhB;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,KAAK,EAAET,OAJX;AAIoB,UAAA,QAAQ,EAAGU,CAAD,IAAOT,UAAU,CAACS,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ/C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,YAFhB;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,KAAK,EAAEb,IAJX;AAIiB,UAAA,QAAQ,EAAGQ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACI,MAAF,CAASC,KAAV;AAJzC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAmBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,kBAFhB;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,KAAK,EAAEX,UAJX;AAIuB,UAAA,QAAQ,EAAGM,CAAD,IAAOL,aAAa,CAACK,CAAC,CAACI,MAAF,CAASC,KAAV;AAJrD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ,eA4BI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,aAFhB;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,KAAK,EAAElB,KAJX;AAIkB,UAAA,QAAQ,EAAGa,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ5C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAqCI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,eAFhB;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,KAAK,EAAET,OAJX;AAIoB,UAAA,QAAQ,EAAGI,CAAD,IAAOH,UAAU,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ/C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArCJ,eA8CI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqDH,CApED;;GAAMrB,c;UACWH,W,EAEID,W;;;KAHfI,c;AAsEN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form,Button,Col, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { saveShippingAddress } from \"../actions/cartAction\"\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst ShippingScreen = (props) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const[city,setCity]=useState(shippingAddress.city)\r\n    const[postalCode,setPostalCode]=useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n    const [state, setStates] = useState(shippingAddress.state)\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address,city,postalCode,state,country}))\r\n        console.log(\"submitted\")\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        required\r\n                        value={address} onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        required\r\n                        value={city} onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>PostalCode</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postalCode'\r\n                        required\r\n                        value={postalCode} onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter state'\r\n                        required\r\n                        value={state} onChange={(e) => setStates(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        required\r\n                        value={country} onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" varient='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n"]},"metadata":{},"sourceType":"module"}