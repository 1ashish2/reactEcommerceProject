{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducer, productDetailReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  productList: productReducer,\n  productDetail: productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userLoginFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userLoginFromStorage\n  },\n  userRegister: {\n    userInfo: userLoginFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","productDetailReducer","cartReducer","userLoginReducers","userRegisterReducers","userDetailsReducers","reducer","productList","productDetail","cart","userLogin","userRegister","userDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userLoginFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,2BAArD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,iBAAR,EAA0BC,oBAA1B,EAA+CC,mBAA/C,QAAyE,yBAAzE;AACA,MAAMC,OAAO,GAAGV,eAAe,CAAC;AAC5BW,EAAAA,WAAW,EAAEP,cADe;AAE5BQ,EAAAA,aAAa,EAAEP,oBAFa;AAG5BQ,EAAAA,IAAI,EAAEP,WAHsB;AAI5BQ,EAAAA,SAAS,EAAEP,iBAJiB;AAK5BQ,EAAAA,YAAY,EAAEP,oBALc;AAM5BQ,EAAAA,WAAW,EAACP;AANgB,CAAD,CAA/B;AASA,MAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GACqB,IADlD;AAGA,MAAMI,YAAY,GAAG;AACjBV,EAAAA,IAAI,EAAE;AAAEW,IAAAA,SAAS,EAAEP;AAAb,GADW;AAEjBH,EAAAA,SAAS,EAAE;AAAEW,IAAAA,QAAQ,EAAEH;AAAZ,GAFM;AAGjBP,EAAAA,YAAY,EAAE;AAAEU,IAAAA,QAAQ,EAAEH;AAAZ;AAHG,CAArB;AAOA,MAAMI,UAAU,GAAG,CAACxB,KAAD,CAAnB;AACA,MAAMyB,KAAK,GAAG5B,WAAW,CAACW,OAAD,EAAUa,YAAV,EAAwBpB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { productReducer, productDetailReducer } from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport {userLoginReducers,userRegisterReducers,userDetailsReducers} from \"./reducers/userReducers\"\r\nconst reducer = combineReducers({\r\n    productList: productReducer,\r\n    productDetail: productDetailReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducers,\r\n    userRegister: userRegisterReducers,\r\n    userDetails:userDetailsReducers,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n    \r\nconst userLoginFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) :null\r\n    \r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage },\r\n    userLogin: { userInfo: userLoginFromStorage },\r\n    userRegister: { userInfo: userLoginFromStorage }\r\n    \r\n}\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}