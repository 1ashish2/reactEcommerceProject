{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducer, productDetailReducer, deleteProductReducer, createProductReducer, updateProductReducer, createProductReviewReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers, userUpdateProfileReducers, userListReducers, userUpdateReducers, userDeleteReducers } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListReducer, ordersReducer, ordersDeliverReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  productList: productReducer,\n  productDetail: productDetailReducer,\n  deleteProductDetail: deleteProductReducer,\n  productCreate: createProductReducer,\n  productUpdate: updateProductReducer,\n  productReviewCreate: createProductReviewReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: userUpdateProfileReducers,\n  userList: userListReducers,\n  userDelete: userDeleteReducers,\n  userUpdate: userUpdateReducers,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderList: orderListReducer,\n  allOrders: ordersReducer,\n  orderDeliver: ordersDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userLoginFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userLoginFromStorage\n  },\n  userRegister: {\n    userInfo: userLoginFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","productDetailReducer","deleteProductReducer","createProductReducer","updateProductReducer","createProductReviewReducer","cartReducer","userLoginReducers","userRegisterReducers","userDetailsReducers","userUpdateProfileReducers","userListReducers","userUpdateReducers","userDeleteReducers","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListReducer","ordersReducer","ordersDeliverReducer","reducer","productList","productDetail","deleteProductDetail","productCreate","productUpdate","productReviewCreate","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderList","allOrders","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userLoginFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,EAAyBC,oBAAzB,EAA8CC,oBAA9C,EAAmEC,oBAAnE,EAAyFC,oBAAzF,EAA8GC,0BAA9G,QAA+I,2BAA/I;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,iBAAR,EAA0BC,oBAA1B,EAA+CC,mBAA/C,EAAmEC,yBAAnE,EAA6FC,gBAA7F,EAA8GC,kBAA9G,EAAiIC,kBAAjI,QAA0J,yBAA1J;AACA,SAASC,kBAAT,EAA4BC,mBAA5B,EAAgDC,eAAhD,EAAgEC,gBAAhE,EAAiFC,aAAjF,EAA+FC,oBAA/F,QAA2H,yBAA3H;AACA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC5ByB,EAAAA,WAAW,EAAErB,cADe;AAE5BsB,EAAAA,aAAa,EAAErB,oBAFa;AAG5BsB,EAAAA,mBAAmB,EAAErB,oBAHO;AAI5BsB,EAAAA,aAAa,EAAErB,oBAJa;AAK5BsB,EAAAA,aAAa,EAAErB,oBALa;AAM5BsB,EAAAA,mBAAmB,EAACrB,0BANQ;AAO5BsB,EAAAA,IAAI,EAAErB,WAPsB;AAQ5BsB,EAAAA,SAAS,EAAErB,iBARiB;AAS5BsB,EAAAA,YAAY,EAAErB,oBATc;AAU5BsB,EAAAA,WAAW,EAAErB,mBAVe;AAW5BsB,EAAAA,iBAAiB,EAAErB,yBAXS;AAY5BsB,EAAAA,QAAQ,EAAErB,gBAZkB;AAa5BsB,EAAAA,UAAU,EAAEpB,kBAbgB;AAc5BqB,EAAAA,UAAU,EAACtB,kBAdiB;AAe5BuB,EAAAA,WAAW,EAAErB,kBAfe;AAgB5BsB,EAAAA,YAAY,EAAErB,mBAhBc;AAiB5BsB,EAAAA,QAAQ,EAAErB,eAjBkB;AAkB5BsB,EAAAA,SAAS,EAAErB,gBAlBiB;AAmB5BsB,EAAAA,SAAS,EAAErB,aAnBiB;AAoB5BsB,EAAAA,YAAY,EAACrB;AApBe,CAAD,CAA/B;AAyBA,MAAMsB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GACsB,IADnD;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACsB,EADzD;AAGA,MAAMK,YAAY,GAAG;AACjBrB,EAAAA,IAAI,EAAE;AAAEsB,IAAAA,SAAS,EAAER,oBAAb;AAAkCS,IAAAA,eAAe,EAACH;AAAlD,GADW;AAEjBnB,EAAAA,SAAS,EAAE;AAAEuB,IAAAA,QAAQ,EAAEL;AAAZ,GAFM;AAGjBjB,EAAAA,YAAY,EAAE;AAAEsB,IAAAA,QAAQ,EAAEL;AAAZ;AAHG,CAArB;AAOA,MAAMM,UAAU,GAAG,CAACtD,KAAD,CAAnB;AACA,MAAMuD,KAAK,GAAG1D,WAAW,CAACyB,OAAD,EAAU4B,YAAV,EAAwBjD,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { productReducer, productDetailReducer,deleteProductReducer,createProductReducer ,updateProductReducer,createProductReviewReducer} from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport {userLoginReducers,userRegisterReducers,userDetailsReducers,userUpdateProfileReducers,userListReducers,userUpdateReducers,userDeleteReducers} from \"./reducers/userReducers\"\r\nimport { orderCreateReducer,orderDetailsReducer,orderPayReducer,orderListReducer,ordersReducer,ordersDeliverReducer } from \"./reducers/orderReducer\";\r\nconst reducer = combineReducers({\r\n    productList: productReducer,\r\n    productDetail: productDetailReducer,\r\n    deleteProductDetail: deleteProductReducer,\r\n    productCreate: createProductReducer,\r\n    productUpdate: updateProductReducer,\r\n    productReviewCreate:createProductReviewReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducers,\r\n    userRegister: userRegisterReducers,\r\n    userDetails: userDetailsReducers,\r\n    userUpdateProfile: userUpdateProfileReducers,\r\n    userList: userListReducers,\r\n    userDelete: userDeleteReducers,\r\n    userUpdate:userUpdateReducers,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderList: orderListReducer,\r\n    allOrders: ordersReducer,\r\n    orderDeliver:ordersDeliverReducer,\r\n   \r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n    \r\nconst userLoginFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n    \r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) :{}\r\n    \r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage,shippingAddress:shippingAddressFromStorage },\r\n    userLogin: { userInfo: userLoginFromStorage },\r\n    userRegister: { userInfo: userLoginFromStorage }\r\n    \r\n}\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}