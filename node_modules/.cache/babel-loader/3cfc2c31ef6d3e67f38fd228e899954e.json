{"ast":null,"code":"var _jsxFileName = \"D:\\\\MernStactEcommerce\\\\ecommerce\\\\src\\\\screens\\\\MainPageScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Pagination, Row } from 'react-bootstrap';\nimport Product from '../components/Product'; //import axios from \"axios\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/productActions\";\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Paginate from '../components/Paginate';\nimport Meta from '../components/Meta';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainPageScreen = props => {\n  _s();\n\n  const keyword = props.match.params.keyword;\n  const pageNumber = props.match.params.pageNumber || 1;\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    error,\n    products,\n    page,\n    pages\n  } = productList;\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n  useEffect(() => {\n    if (products && products.length > 0) {\n      let categories = [...new Set(products.map(bill => bill.category))];\n      let filterArray = products.filter((data, id) => data.category === categories[0]);\n      console.log(\"format data\", categories);\n      console.log(\"format data filterArray\", filterArray);\n    }\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 27\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 48\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: products.map((ele, i) => /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          sm: 12,\n          md: 6,\n          lg: 4,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(Product, {\n            product: ele\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, ele._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n        pages: pages,\n        page: page,\n        keyword: keyword ? keyword : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(MainPageScreen, \"ucX4ujqO6n79OLixEzRTz+d+jUs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainPageScreen;\nexport default MainPageScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPageScreen\");","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/screens/MainPageScreen.js"],"names":["React","useState","useEffect","Col","Pagination","Row","Product","useDispatch","useSelector","listProducts","Loader","Message","Paginate","Meta","MainPageScreen","props","keyword","match","params","pageNumber","dispatch","productList","state","loading","error","products","page","pages","length","categories","Set","map","bill","category","filterArray","filter","data","id","console","log","ele","i","_id"],"mappings":"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","sourcesContent":["import React, { useState,useEffect}from 'react'\r\nimport { Col, Pagination, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\n//import axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { listProducts } from \"../actions/productActions\"\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport Meta from '../components/Meta';\r\nconst MainPageScreen = (props) => {\r\n    const keyword = props.match.params.keyword;\r\n    const pageNumber = props.match.params.pageNumber || 1\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products,page,pages } = productList;\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword,pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n    \r\n    useEffect(() => {\r\n        if (products && products.length >0)\r\n        {   \r\n      \r\n            let categories = ([...new Set(products.map(bill => bill.category))])\r\n           \r\n            let filterArray = products.filter((data, id) => data.category === categories[0])\r\n            console.log(\"format data\", categories)\r\n             console.log(\"format data filterArray\",filterArray)\r\n        }\r\n    },[products])\r\n    return (\r\n        <>\r\n            <Meta />\r\n            <h1>Latest Products</h1>\r\n            <hr />\r\n            {\r\n                loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :<>\r\n                    <Row>\r\n                {\r\n                    products.map((ele, i) => (\r\n                        <Col key={ele._id} xs={6} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={ele}/>\r\n                        </Col>\r\n                    ))\r\n                }\r\n               \r\n                    </Row>\r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword:\"\"} />\r\n                    </>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPageScreen\r\n"]},"metadata":{},"sourceType":"module"}