{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducer, productDetailReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers, userUpdateProfileReducers } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  productList: productReducer,\n  productDetail: productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: userUpdateProfileReducers\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userLoginFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userLoginFromStorage\n  },\n  userRegister: {\n    userInfo: userLoginFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","productDetailReducer","cartReducer","userLoginReducers","userRegisterReducers","userDetailsReducers","userUpdateProfileReducers","reducer","productList","productDetail","cart","userLogin","userRegister","userDetails","userUpdateProfile","cartItemsFromStorage","localStorage","getItem","JSON","parse","userLoginFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,2BAArD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,iBAAR,EAA0BC,oBAA1B,EAA+CC,mBAA/C,EAAmEC,yBAAnE,QAAmG,yBAAnG;AACA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,WAAW,EAAER,cADe;AAE5BS,EAAAA,aAAa,EAAER,oBAFa;AAG5BS,EAAAA,IAAI,EAAER,WAHsB;AAI5BS,EAAAA,SAAS,EAAER,iBAJiB;AAK5BS,EAAAA,YAAY,EAAER,oBALc;AAM5BS,EAAAA,WAAW,EAAER,mBANe;AAO5BS,EAAAA,iBAAiB,EAAER;AAPS,CAAD,CAA/B;AAWA,MAAMS,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADyB,GACsB,IADnD;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACsB,EADzD;AAGA,MAAMK,YAAY,GAAG;AACjBZ,EAAAA,IAAI,EAAE;AAAEa,IAAAA,SAAS,EAAER,oBAAb;AAAkCS,IAAAA,eAAe,EAACH;AAAlD,GADW;AAEjBV,EAAAA,SAAS,EAAE;AAAEc,IAAAA,QAAQ,EAAEL;AAAZ,GAFM;AAGjBR,EAAAA,YAAY,EAAE;AAAEa,IAAAA,QAAQ,EAAEL;AAAZ;AAHG,CAArB;AAOA,MAAMM,UAAU,GAAG,CAAC5B,KAAD,CAAnB;AACA,MAAM6B,KAAK,GAAGhC,WAAW,CAACY,OAAD,EAAUe,YAAV,EAAwBvB,mBAAmB,CAACF,eAAe,CAAC,GAAG6B,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { productReducer, productDetailReducer } from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport {userLoginReducers,userRegisterReducers,userDetailsReducers,userUpdateProfileReducers} from \"./reducers/userReducers\"\r\nconst reducer = combineReducers({\r\n    productList: productReducer,\r\n    productDetail: productDetailReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducers,\r\n    userRegister: userRegisterReducers,\r\n    userDetails: userDetailsReducers,\r\n    userUpdateProfile: userUpdateProfileReducers,\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n    \r\nconst userLoginFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n    \r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) :{}\r\n    \r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage,shippingAddress:shippingAddressFromStorage },\r\n    userLogin: { userInfo: userLoginFromStorage },\r\n    userRegister: { userInfo: userLoginFromStorage }\r\n    \r\n}\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}