{"ast":null,"code":"import _slicedToArray from\"D:/MernStactEcommerce/ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col,Row}from'react-bootstrap';import{useDispatch,useSelector}from\"react-redux\";import{savePaymentMethod}from\"../actions/cartAction\";import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import MarginalDistanceTop from'../components/MarginalDistanceTop';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(props){var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){props.history.push('/shipping');}var dispatch=useDispatch();var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var submitHandler=function submitHandler(e){e.preventDefault();// console.log({address,city,postalCode,state,country})\ndispatch(savePaymentMethod(paymentMethod));props.history.push('/placeorder');};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Stripe\",id:\"Stripe\",name:\"paymentMethod\",value:\"Stripe\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",varient:\"primary\",children:\"Continue\"})]})]})});};export default PaymentScreen;","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","Row","useDispatch","useSelector","savePaymentMethod","FormContainer","CheckoutSteps","MarginalDistanceTop","PaymentScreen","props","cart","state","shippingAddress","history","push","dispatch","paymentMethod","setPaymentMethod","submitHandler","e","preventDefault","target","value"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAcC,MAAd,CAAqBC,GAArB,CAA0BC,GAA1B,KAAqC,iBAArC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,iBAAT,KAAkC,uBAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,mCAAhC,C,6IAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7B,GAAMC,CAAAA,IAAI,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CACA,GAAI,CAACA,eAAL,CAAsB,CAClBH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,WAAnB,EACH,CACD,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACA,cAA0CL,QAAQ,CAAC,QAAD,CAAlD,wCAAOmB,aAAP,eAAsBC,gBAAtB,eAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACD;AACCL,QAAQ,CAACX,iBAAiB,CAACY,aAAD,CAAlB,CAAR,CACDP,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,aAAnB,EACF,CALD,CAMA,mBACI,sCAEA,MAAC,aAAD,yBACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAEI,sCAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAGA,MAAC,GAAD,yBACI,KAAC,IAAD,CAAM,KAAN,EACI,IAAI,CAAC,OADT,CAEI,KAAK,CAAC,uBAFV,CAGI,EAAE,CAAC,QAHP,CAII,IAAI,CAAC,eAJT,CAKI,KAAK,CAAC,QALV,CAMI,OAAO,KANX,CAOI,QAAQ,CAAE,kBAACC,CAAD,QAAKF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB,EAPd,EADJ,cAUK,KAAC,IAAD,CAAM,KAAN,EACG,IAAI,CAAC,OADR,CAEG,KAAK,CAAC,QAFT,CAGG,EAAE,CAAC,QAHN,CAIG,IAAI,CAAC,eAJR,CAKG,KAAK,CAAC,QALT,CAOG,QAAQ,CAAE,kBAACH,CAAD,QAAKF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB,EAPb,EAVL,GAHA,GADJ,cAyBI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAzBJ,GAHJ,GAFA,EADJ,CAoCH,CApDD,CAsDA,cAAed,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form,Button,Col, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { savePaymentMethod } from \"../actions/cartAction\"\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport MarginalDistanceTop from '../components/MarginalDistanceTop';\r\n\r\nconst PaymentScreen = (props) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    if (!shippingAddress) {\r\n        props.history.push('/shipping')\r\n    }\r\n    const dispatch = useDispatch()\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n   \r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       // console.log({address,city,postalCode,state,country})\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n       props.history.push('/placeorder')\r\n    }\r\n    return (\r\n        <>\r\n           \r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n               \r\n                <Col>\r\n                    <Form.Check\r\n                        type='radio'\r\n                        label='PayPal or credit Card'\r\n                        id='PayPal'\r\n                        name=\"paymentMethod\"\r\n                        value='PayPal'\r\n                        checked\r\n                        onChange={(e)=>setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                     <Form.Check\r\n                        type='radio'\r\n                        label='Stripe'\r\n                        id='Stripe'\r\n                        name=\"paymentMethod\"\r\n                        value='Stripe'\r\n                       \r\n                        onChange={(e)=>setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                    </Col>\r\n                     </Form.Group>\r\n                <Button type=\"submit\" varient='primary'>Continue</Button>\r\n            </Form>\r\n            </FormContainer>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n\r\n"]},"metadata":{},"sourceType":"module"}