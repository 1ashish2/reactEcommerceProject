{"ast":null,"code":"var _jsxFileName = \"D:\\\\MernStactEcommerce\\\\ecommerce\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../actions/userAction\";\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [messages, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const redirect = props.location.search ? props.location.search.split('=')[1] : null;\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(redirect);\n    }\n  }, [props.history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //console.log(email)\n\n    if (password !== confirmPassword) {\n      setMessage('Password not matched');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), messages && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"my-2\",\n        variant: \"primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3 \",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"Have an Account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/login?redirect=${redirect}` : '/login',\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n};\n\n_s(RegisterScreen, \"vHLoZVtPAGWK8I+h6Z572MkwOsI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Col","Row","useDispatch","useSelector","register","Loader","Message","FormContainer","RegisterScreen","props","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","messages","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","location","search","split","history","push","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAcC,MAAd,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,iBAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAehB,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACuB,QAAD,EAAWC,UAAX,IAAyBxB,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAMyB,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,YAAY,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACD,YAAhB,CAAhC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BJ,YAArC;AACA,QAAMK,QAAQ,GAAGjB,KAAK,CAACkB,QAAN,CAAeC,MAAf,GAAwBnB,KAAK,CAACkB,QAAN,CAAeC,MAAf,CAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAxB,GAA8D,IAA/E;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI6B,QAAJ,EACA;AACIhB,MAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAmBL,QAAnB;AACH;AACJ,GALQ,EAKP,CAACjB,KAAK,CAACqB,OAAP,EAAeL,QAAf,EAAwBC,QAAxB,CALO,CAAT;;AAMA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAEzB;;AACA,QAAIpB,QAAQ,KAAKE,eAAjB,EACA;AACIG,MAAAA,UAAU,CAAC,sBAAD,CAAV;AACH,KAHD,MAIA;AACEC,MAAAA,QAAQ,CAAChB,QAAQ,CAACM,IAAD,EAAME,KAAN,EAAaE,QAAb,CAAT,CAAR;AACD;AAEJ,GAXD;;AAYA,sBACQ,QAAC,aAAD;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECI,QAAQ,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFb,EAGCM,KAAK,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAHV,EAICD,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJZ,eAKA,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAES,aAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,YAFhB;AAGI,UAAA,KAAK,EAAEtB,IAHX;AAGiB,UAAA,QAAQ,EAAGuB,CAAD,IAAOtB,OAAO,CAACsB,CAAC,CAACE,MAAF,CAASC,KAAV;AAHzC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,WAAW,EAAC,aAFhB;AAGI,UAAA,KAAK,EAAExB,KAHX;AAGkB,UAAA,QAAQ,EAAGqB,CAAD,IAAOpB,QAAQ,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV;AAH3C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,WAAW,EAAC,gBAFhB;AAGI,UAAA,KAAK,EAAEtB,QAHX;AAGqB,UAAA,QAAQ,EAAGmB,CAAD,IAAOlB,WAAW,CAACkB,CAAC,CAACE,MAAF,CAASC,KAAV;AAHjD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAyBK,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA,gCACG,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,WAAW,EAAC,kBAFhB;AAGI,UAAA,KAAK,EAAEpB,eAHX;AAG4B,UAAA,QAAQ,EAAGiB,CAAD,IAAOhB,kBAAkB,CAACgB,CAAC,CAACE,MAAF,CAASC,KAAV;AAH/D;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBL,eAiCI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAuC,QAAA,OAAO,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAwCA,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI,QAAC,GAAD;AAAA,qDACoB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEV,QAAQ,GAAI,mBAAkBA,QAAS,EAA/B,GAAiC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxCA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAiDH,CA7ED;;GAAMlB,c;UAMeN,W,EACIC,W;;;KAPnBK,c;AA+EN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form,Button,Col, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { register } from \"../actions/userAction\"\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\n\r\nconst RegisterScreen = (props) => {\r\n    const[name,setName]=useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [messages, setMessage] = useState(null)\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister;\r\n    const redirect = props.location.search ? props.location.search.split('=')[1] : null\r\n    useEffect(() => {\r\n        if (userInfo)\r\n        {\r\n            props.history.push(redirect)\r\n        }\r\n    },[props.history,userInfo,redirect])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //console.log(email)\r\n        if (password !== confirmPassword)\r\n        {\r\n            setMessage('Password not matched')\r\n        } else\r\n        {\r\n          dispatch(register(name,email, password));  \r\n        }\r\n        \r\n    }\r\n    return (\r\n            <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {messages && <Message variant='danger'>{messages}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name} onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" className=\"my-2\" variant='primary' >Register</Button>\r\n            </Form>\r\n            <Row className='py-3 '>\r\n                <Col>\r\n                   Have an Account? <Link to={redirect ? `/login?redirect=${redirect}`:'/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n            </FormContainer>\r\n       \r\n    )\r\n}\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}