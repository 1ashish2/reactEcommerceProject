{"ast":null,"code":"var _jsxFileName = \"D:\\\\MernStactEcommerce\\\\ecommerce\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Col, Row, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetail, updateUserProfile } from \"../actions/userAction\";\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { orderLists } from \"../actions/orderAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [messages, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderList;\n  useEffect(() => {\n    if (!userInfo) {\n      props.history.push('/login');\n    } else {\n      if (!user.name || success) {\n        dispatch({\n          type: USER_UPDATE_RESET\n        });\n        dispatch(getUserDetail('profile'));\n        dispatch(orderLists());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, props.history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //console.log(email)\n\n    if (password !== confirmPassword) {\n      setMessage('Password not matched');\n    } else {\n      // dispatch update container  \n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"py-3 \",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this), messages && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"my-2\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 64\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: \"red\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? order.isDelivered.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: \" red\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-sm\",\n                  variant: \"light\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProfileScreen, \"6CRBOgEBx3Pte73+1fN+oJzd1Ao=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Col","Row","Table","LinkContainer","useDispatch","useSelector","getUserDetail","updateUserProfile","Loader","Message","USER_UPDATE_RESET","orderLists","ProfileScreen","props","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","messages","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderList","loadingOrders","errorOrders","orders","history","push","type","submitHandler","e","preventDefault","id","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getUserDetail,updateUserProfile } from \"../actions/userAction\"\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {USER_UPDATE_RESET} from \"../constants/userConstants\"\r\nimport {orderLists} from \"../actions/orderAction\"\r\nconst ProfileScreen = (props) => {\r\n    const[name,setName]=useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [messages, setMessage] = useState(null)\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails;\r\n\r\n     const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n     const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile;\r\n\r\n     const orderList = useSelector(state => state.orderList)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderList;\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo)\r\n        {\r\n            props.history.push('/login')\r\n        } else{\r\n            if ( !user.name || success) {\r\n                dispatch({type:USER_UPDATE_RESET})\r\n                dispatch(getUserDetail('profile'))\r\n                dispatch(orderLists())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[dispatch,props.history,userInfo,user,success])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //console.log(email)\r\n        if (password !== confirmPassword)\r\n        {\r\n            setMessage('Password not matched')\r\n        } else\r\n        {\r\n         // dispatch update container  \r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }))\r\n        }\r\n        \r\n    }\r\n    return (\r\n           \r\n            <Row className='py-3 '>\r\n            <Col md={3}>\r\n               <h2>User Profile</h2>\r\n            {messages && <Message variant='danger'>{messages}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile updated</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name} onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" className=\"my-2\" variant='primary' >Update</Button>\r\n            </Form>   \r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My orders</h2>\r\n                {\r\n                    loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message>\r\n                        : (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>DATE</th>\r\n                                        <th>TOTAL</th>\r\n                                        <th>PAID</th>\r\n                                        <th>DELIVERED</th>\r\n                                        <th></th>\r\n                                       \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        orders.map(order => (\r\n                                            <tr>\r\n                                                <td>{order._id}</td>\r\n                                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                                <td>{order.totalPrice}</td>\r\n                                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                    <i className=\"fas fa-times\" style={{color:\"red\"}}></i>\r\n                                                )}</td>\r\n                                                <td>{order.isDelivered ? order.isDelivered.substring(0, 10) :\r\n                                                    <i className=\"fas fa-times\" style={{ color: \" red\" }}></i>}</td>\r\n                                                <td><LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className=\"btn-sm\" variant='light'>Details</Button>\r\n                                                </LinkContainer></td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                    \r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n                }\r\n            </Col>\r\n        </Row>\r\n           \r\n       \r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}