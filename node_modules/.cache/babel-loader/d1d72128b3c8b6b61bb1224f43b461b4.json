{"ast":null,"code":"var _jsxFileName = \"D:\\\\MernStactEcommerce\\\\ecommerce\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Col, Row, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetail, updateUserProfile } from \"../actions/userAction\";\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { orderLists } from \"../actions/orderAction\";\nimport FilterBox from '../components/FilterBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [messages, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderList;\n  const [filterDropdown, setFilterDropdown] = useState('');\n  useEffect(() => {\n    setFilterDropdown('');\n  }, []);\n  useEffect(() => {\n    if (!userInfo) {\n      props.history.push('/login');\n    } else {\n      if (user) {\n        if (!user.name || success) {\n          dispatch({\n            type: USER_UPDATE_RESET\n          });\n          dispatch(getUserDetail('profile'));\n          dispatch(orderLists());\n        } else {\n          setName(user.name);\n          setEmail(user.email);\n        }\n      }\n    }\n  }, [dispatch, props.history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //console.log(email)\n\n    if (password !== confirmPassword) {\n      setMessage('Password not matched');\n    } else {\n      // dispatch update container  \n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  const handleFilterDropdownList = name => {\n    setFilterDropdown(name); //dispatch(orderLists(name))\n    // let dd=orders.sort((a,b)=> b.isPaid < a.isPaid?-1:1)\n    // console.log(dd)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3 \",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this), messages && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 26\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"success\",\n          children: \"Profile updated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"my-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"my-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"my-2\",\n            variant: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"My orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"filter-box\",\n            style: {\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginBottom: \"5px\"\n            },\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(FilterBox, {\n              filterDropdown: filterDropdown,\n              handleFilterDropdownList: handleFilterDropdownList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: errorOrders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 64\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          className: \"table-sm bg-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TOTAL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PAID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DELIVERED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: orders && orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.createdAt.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.totalPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \"red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.isDelivered ? order.isDelivered.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\",\n                  style: {\n                    color: \" red\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                  to: `/order/${order._id}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn-sm\",\n                    variant: \"light\",\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileScreen, \"bPMU87+cYX+o8cZNpYc3MSZVh6w=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Col","Row","Table","LinkContainer","useDispatch","useSelector","getUserDetail","updateUserProfile","Loader","Message","USER_UPDATE_RESET","orderLists","FilterBox","ProfileScreen","props","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","messages","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderList","loadingOrders","errorOrders","orders","filterDropdown","setFilterDropdown","history","push","type","submitHandler","e","preventDefault","id","_id","handleFilterDropdownList","target","value","display","justifyContent","marginBottom","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col, Row, Table} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getUserDetail,updateUserProfile } from \"../actions/userAction\"\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {USER_UPDATE_RESET} from \"../constants/userConstants\"\r\nimport {orderLists} from \"../actions/orderAction\"\r\nimport FilterBox from '../components/FilterBox';\r\n\r\nconst ProfileScreen = (props) => {\r\n    const[name,setName]=useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [messages, setMessage] = useState(null)\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails;\r\n\r\n     const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n     const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile;\r\n\r\n     const orderList = useSelector(state => state.orderList)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderList;\r\n    const [filterDropdown, setFilterDropdown] = useState('')\r\n    useEffect(() => {\r\n        setFilterDropdown('')\r\n        \r\n    },[])\r\n    useEffect(() => {\r\n        if (!userInfo)\r\n        {\r\n            props.history.push('/login')\r\n        } else {\r\n            if (user) {\r\n                if (!user.name || success) {\r\n                    dispatch({ type: USER_UPDATE_RESET })\r\n                    dispatch(getUserDetail('profile'))\r\n                    \r\n                    dispatch(orderLists())\r\n                } else {\r\n                    setName(user.name)\r\n                    setEmail(user.email)\r\n                }\r\n            }\r\n        }\r\n    },[dispatch,props.history,userInfo,user,success])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //console.log(email)\r\n        if (password !== confirmPassword)\r\n        {\r\n            setMessage('Password not matched')\r\n        } else\r\n        {\r\n         // dispatch update container  \r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }))\r\n        }\r\n        \r\n    }\r\n    const handleFilterDropdownList = (name) => {\r\n        setFilterDropdown(name)\r\n        //dispatch(orderLists(name))\r\n        // let dd=orders.sort((a,b)=> b.isPaid < a.isPaid?-1:1)\r\n        // console.log(dd)\r\n       \r\n    }\r\n    return (\r\n        <>\r\n           \r\n            <Row className='py-3 '>\r\n            <Col md={3}>\r\n               <h2>User Profile</h2>\r\n            {messages && <Message variant='danger'>{messages}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile updated</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name} onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" className=\"my-2\" variant='primary' >Update</Button>\r\n            </Form>   \r\n            </Col>\r\n                <Col md={9}>\r\n                    <Row>\r\n                        <Col>\r\n                            <h2>My orders</h2>\r\n                        </Col>\r\n                        <Col className=\"filter-box\" style={{ display: \"flex\", justifyContent: \"flex-end\",marginBottom:\"5px\" }} md={3}>\r\n                            <FilterBox\r\n                                filterDropdown={filterDropdown}\r\n                                handleFilterDropdownList={handleFilterDropdownList}\r\n                            />\r\n                        </Col>\r\n                </Row>\r\n                {\r\n                    loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message>\r\n                        : (\r\n                            <Table striped bordered hover responsive className='table-sm bg-light'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>DATE</th>\r\n                                        <th>TOTAL</th>\r\n                                        <th>PAID</th>\r\n                                        <th>DELIVERED</th>\r\n                                        <th></th>\r\n                                       \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                       orders && orders.map(order => (\r\n                                            <tr>\r\n                                                <td>{order._id}</td>\r\n                                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                                <td>{order.totalPrice}</td>\r\n                                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                    <i className=\"fas fa-times\" style={{color:\"red\"}}></i>\r\n                                                )}</td>\r\n                                                <td>{order.isDelivered ? order.isDelivered.substring(0, 10) :\r\n                                                    <i className=\"fas fa-times\" style={{ color: \" red\" }}></i>}</td>\r\n                                                <td><LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className=\"btn-sm\" variant='light'>Details</Button>\r\n                                                </LinkContainer></td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                    \r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n                }\r\n            </Col>\r\n        </Row>\r\n           \r\n     </>  \r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}