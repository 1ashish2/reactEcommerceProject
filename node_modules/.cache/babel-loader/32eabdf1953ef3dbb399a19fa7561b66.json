{"ast":null,"code":"import _slicedToArray from\"D:/MernStactEcommerce/ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from\"react-redux\";import{getUserDetail,updateUser}from\"../actions/userAction\";import Loader from'../components/Loader';import Message from'../components/Message';import FormContainer from'../components/FormContainer';import{USER_UPDATES_RESET}from\"../constants/userConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UserEditScreen=function UserEditScreen(props){var userId=props.match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATES_RESET});props.history.push('/admin/userlist');}else{if(user){if(!user.name||user._id!==userId){dispatch(getUserDetail(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}}},[dispatch,user,successUpdate,userId]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:userId,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",className:\"btn btn-dark my-3\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"my-2\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"my-2\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"my-2\",variant:\"primary\",children:\"Update\"})]})]})]});};export default UserEditScreen;","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","getUserDetail","updateUser","Loader","Message","FormContainer","USER_UPDATES_RESET","UserEditScreen","props","userId","match","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","type","history","push","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form,Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getUserDetail,updateUser } from \"../actions/userAction\"\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {USER_UPDATES_RESET} from \"../constants/userConstants\"\r\n\r\n\r\nconst UserEditScreen = (props) => {\r\n    const userId = props.match.params.id;\r\n    const[name,setName]=useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    \r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = userUpdate;\r\n    \r\n    useEffect(() => {\r\n        if (successUpdate)\r\n        {\r\n            dispatch({ type: USER_UPDATES_RESET })\r\n            props.history.push('/admin/userlist')\r\n        } else{\r\n             if (user) {\r\n           if (!user.name || user._id !== userId) {\r\n           dispatch(getUserDetail(userId)) \r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n        } \r\n        }\r\n        }\r\n       \r\n        \r\n    },[dispatch,user,successUpdate,userId])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n        \r\n    }\r\n    return (\r\n        <>\r\n           \r\n            <Link to='/admin/userlist' className=\"btn btn-dark my-3\">Go Back</Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group className=\"my-2\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter name'\r\n                                value={name} onChange={(e) => setName(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"my-2\">\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter email'\r\n                                value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"isadmin\">\r\n                            \r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n                       \r\n                        <Button type=\"submit\" className=\"my-2\" variant='primary' >Update</Button>\r\n                    </Form>\r\n                }\r\n            </FormContainer>\r\n            </>\r\n       \r\n    )\r\n}\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}