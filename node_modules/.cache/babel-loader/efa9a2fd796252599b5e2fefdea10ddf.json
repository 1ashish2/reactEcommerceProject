{"ast":null,"code":"var _jsxFileName = \"D:\\\\MernStactEcommerce\\\\ecommerce\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetail } from \"../actions/userAction\";\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [messages, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      props.history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetail('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, props.history, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //console.log(email)\n\n    if (password !== confirmPassword) {\n      setMessage('Password not matched');\n    } else {// dispatch update container  \n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"py-3 \",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this), messages && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"my-2\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProfileScreen, \"+jmYHrirF2Ty7hWeHwgfg8YKJgw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/MernStactEcommerce/ecommerce/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Col","Row","useDispatch","useSelector","getUserDetail","Loader","Message","ProfileScreen","props","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","messages","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","history","push","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAcC,MAAd,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,iBAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAef,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACsB,QAAD,EAAWC,UAAX,IAAyBvB,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAMwB,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,WAAW,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,WAAjC;AAEC,QAAMK,SAAS,GAAGtB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACI,SAAhB,CAA7B;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAeD,SAArB;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAAC8B,QAAL,EACA;AACIlB,MAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH,KAHD,MAGM;AACF,UAAI,CAACJ,IAAI,CAACf,IAAV,EAAgB;AACZU,QAAAA,QAAQ,CAACf,aAAa,CAAC,SAAD,CAAd,CAAR;AACH,OAFD,MAEO;AACHM,QAAAA,OAAO,CAACc,IAAI,CAACf,IAAN,CAAP;AACAG,QAAAA,QAAQ,CAACY,IAAI,CAACb,KAAN,CAAR;AACH;AACJ;AACJ,GAZQ,EAYP,CAACQ,QAAD,EAAUX,KAAK,CAACmB,OAAhB,EAAwBD,QAAxB,CAZO,CAAT;;AAaA,QAAMG,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAEzB;;AACA,QAAIlB,QAAQ,KAAKE,eAAjB,EACA;AACIG,MAAAA,UAAU,CAAC,sBAAD,CAAV;AACH,KAHD,MAIA,CACC;AACA;AAEJ,GAXD;;AAYA,sBAEQ,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACA,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,EAECD,QAAQ,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFb,EAGCM,KAAK,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHV,EAICD,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJZ,eAKA,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEO,aAAhB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,WAAW,EAAC,YAFhB;AAGI,YAAA,KAAK,EAAEpB,IAHX;AAGiB,YAAA,QAAQ,EAAGqB,CAAD,IAAOpB,OAAO,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV;AAHzC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,WAAW,EAAC,aAFhB;AAGI,YAAA,KAAK,EAAEtB,KAHX;AAGkB,YAAA,QAAQ,EAAGmB,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACE,MAAF,CAASC,KAAV;AAH3C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAiBI,QAAC,IAAD,CAAM,KAAN;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,WAAW,EAAC,gBAFhB;AAGI,YAAA,KAAK,EAAEpB,QAHX;AAGqB,YAAA,QAAQ,EAAGiB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACE,MAAF,CAASC,KAAV;AAHjD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAyBK,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,iBAAtB;AAAA,kCACG,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,WAAW,EAAC,kBAFhB;AAGI,YAAA,KAAK,EAAElB,eAHX;AAG4B,YAAA,QAAQ,EAAGe,CAAD,IAAOd,kBAAkB,CAACc,CAAC,CAACE,MAAF,CAASC,KAAV;AAH/D;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBL,eAiCI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAuC,UAAA,OAAO,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eA0CA,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1CA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAmDH,CAzFD;;GAAM1B,a;UAMeL,W,EACGC,W,EAGDA,W;;;KAVjBI,a;AA2FN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form,Button,Col, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getUserDetail } from \"../actions/userAction\"\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\n\r\nconst ProfileScreen = (props) => {\r\n    const[name,setName]=useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [messages, setMessage] = useState(null)\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails;\r\n\r\n     const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo)\r\n        {\r\n            props.history.push('/login')\r\n        } else{\r\n            if (!user.name) {\r\n                dispatch(getUserDetail('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[dispatch,props.history,userInfo])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //console.log(email)\r\n        if (password !== confirmPassword)\r\n        {\r\n            setMessage('Password not matched')\r\n        } else\r\n        {\r\n         // dispatch update container  \r\n        }\r\n        \r\n    }\r\n    return (\r\n           \r\n            <Row className='py-3 '>\r\n            <Col md={3}>\r\n               <h2>User Profile</h2>\r\n            {messages && <Message variant='danger'>{messages}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name} onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className=\"my-2\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" className=\"my-2\" variant='primary' >Update</Button>\r\n            </Form>   \r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My orders</h2>\r\n            </Col>\r\n        </Row>\r\n           \r\n       \r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}